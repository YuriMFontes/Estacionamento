trigger:
  branches:
    include:
      - main
      - develop

variables:
  imageName: 'smartparking'

pool:
  name: 'default'  # Pool local que você configurou

stages:
  - stage: Build
    displayName: "Build Docker Image"
    jobs:
      - job: DockerBuild
        displayName: "Docker Build Job"
        steps:
          - checkout: self

          - task: Docker@2
            displayName: 'Build Docker Image'
            inputs:
              command: build
              dockerfile: 'Dockerfile'
              buildContext: '$(Build.SourcesDirectory)'
              tags: |
                $(imageName):$(Build.SourceBranchName)-$(Build.BuildId)

  - stage: Deploy
    displayName: "Deploy Application"
    dependsOn: Build
    jobs:
      - job: Deploy
        displayName: "Run Container"
        steps:
          - script: |
              echo Verificando containers existentes...
              docker ps -a

              echo Logs do banco de dados:
              docker logs smartparking-db

              echo Verificando se o container está rodando...
              docker inspect -f "{{.State.Running}}" smartparking-db > status.txt 2>NUL

              for /f %%i in (status.txt) do set STATUS=%%i

              if "%STATUS%"=="false" (
                  echo O container smartparking-db está parado. Iniciando...
                  docker start smartparking-db
              ) else (
                  echo O container smartparking-db já está rodando.
              )
            displayName: "Verificar banco de dados e logs"

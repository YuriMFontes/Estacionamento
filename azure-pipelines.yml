trigger:
  branches:
    include:
      - main
      - develop

variables:
  imageName: 'smartparking'
  dockerRegistryServiceConnection: 'CONEXAO-DOCKER'  # Substitua pelo nome da sua conexão com Docker Registry (Azure ou DockerHub)

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: "Build Docker Image"
    jobs:
      - job: DockerBuild
        steps:
          - task: Checkout@1  # Faz o checkout do código do repositório

          - task: Docker@2
            displayName: 'Build Docker Image'
            inputs:
              command: build
              Dockerfile: '**/Dockerfile'
              repository: $(imageName)
              tags: |
                $(Build.SourceBranchName)-$(Build.BuildId)

  - stage: Deploy_Staging
    displayName: "Deploy to Staging"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
    dependsOn: Build
    jobs:
      - job: DeployStaging
        steps:
          - script: |
              echo "Fazendo deploy para o ambiente de STAGING..."
              docker run -d -p 8081:8080 $(imageName):$(Build.SourceBranchName)-$(Build.BuildId)
            displayName: "Rodar container Staging"

  - stage: Deploy_Production
    displayName: "Deploy to Production"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    dependsOn: Build
    jobs:
      - job: DeployProduction
        steps:
          - script: |
              echo "Fazendo deploy para PRODUÇÃO..."
              docker run -d -p 8080:8080 $(imageName):$(Build.SourceBranchName)-$(Build.BuildId)
            displayName: "Rodar container Produção"

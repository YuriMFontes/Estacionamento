trigger:
  branches:
    include:
      - main
      - develop

variables:
  imageName: 'smartparking'

pool:
  name: 'default'  # Pool local que você configurou

stages:
  - stage: Build
    displayName: "Build Docker Image"
    jobs:
      - job: DockerBuild
        displayName: "Docker Build Job"
        steps:
          - checkout: self

          - task: Docker@2
            displayName: 'Build Docker Image'
            inputs:
              command: build
              dockerfile: 'Dockerfile'
              buildContext: '$(Build.SourcesDirectory)'
              tags: |
                $(imageName):$(Build.SourceBranchName)-$(Build.BuildId)

  - stage: Deploy
    displayName: "Deploy Application"
    dependsOn: Build
    jobs:
      - job: Deploy
        displayName: "Run Container"
        steps:
          - script: |
              :: Inicia o container se não estiver rodando
              docker ps -a  :: Verifica todos os containers, incluindo os parados
              docker logs smartparking-db  :: Exibe os logs do container PostgreSQL
              :: Verifica o status do container e tenta reiniciá-lo se necessário
              if not docker ps -q -f name=smartparking-db (
                echo Container 'smartparking-db' não está em execução. Tentando reiniciar...
                docker start smartparking-db
              )
            displayName: "Verificar banco de dados e logs"

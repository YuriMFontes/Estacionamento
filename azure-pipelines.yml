trigger:
  - master  # O pipeline será acionado quando houver um push para o branch 'master'

resources:
  - repo: self  # Usar o repositório atual do código

variables:
  tag: '$(Build.BuildId)'  # A tag da imagem será o ID da build gerada

stages:
  # Etapa 1: Build da imagem Docker
  - stage: Build
    displayName: 'Build Docker image'
    jobs:
      - job: Build
        displayName: 'Build Docker image'
        pool:
          vmImage: 'ubuntu-latest'  # Usar a imagem padrão do Ubuntu
        steps:
          # Passo para construir a imagem Docker com o Dockerfile do projeto
          - task: Docker@2
            displayName: 'Build Docker image'
            inputs:
              command: 'build'
              dockerfile: '**/Dockerfile'  # Caminho para o Dockerfile do seu projeto
              tags: $(tag)  # Usar o BuildId como a tag da imagem

  # Etapa 2: Push da imagem para o Docker Hub ou Azure Container Registry
  - stage: Push
    displayName: 'Push Docker image to registry'
    jobs:
      - job: Push
        displayName: 'Push Docker image'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          # Passo para fazer o push da imagem Docker para o repositório
          - task: Docker@2
            displayName: 'Push Docker image'
            inputs:
              command: 'push'
              containerRegistry: '<docker-registry-service-connection>'  # Substitua pelo nome da conexão do Docker
              repository: '<your-repository-name>'  # Nome do repositório no Docker Hub ou Azure Container Registry
              tags: $(tag)  # Usar a tag da imagem gerada

  # Etapa 3: Deploy (Usando Azure Web App para Containers)
  - stage: Deploy
    displayName: 'Deploy Docker image to Azure Web App'
    jobs:
      - job: Deploy
        displayName: 'Deploy to Azure Web App'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          # Passo para fazer o deploy da imagem Docker no Azure Web App
          - task: AzureWebAppContainer@1
            displayName: 'Deploy to Azure Web App'
            inputs:
              azureSubscription: '<your-azure-subscription>'  # Substitua pela sua subscrição do Azure
              appName: '<your-azure-webapp-name>'  # Nome do seu Azure Web App
              imageName: '<your-repository-name>:$(tag)'  # Nome da imagem no Docker Hub ou Azure Container Registry
